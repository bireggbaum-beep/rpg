Statblock Spezifikation – Spielcharakter (SC) v0.10
Aufbauend auf v0.9 — vollständige Spec inkl. Magiesystem (Mana, Stäbe, Zauber)

Wichtiger Hinweis:
- Währung: Gold (GM).
- Item‑/Stab‑Referenzen entstammen der Ausrüstungsdatei (siehe Einträge Stäbe / Preise) [[11]].

====================================
1. Überblick der Ergänzungen in v0.10
====================================
Neu ergänzt:
- Mana‑System (max_mana, mana_aktuell) in den abgeleiteten Werten.
- Stab/Fokus als Ausrüstungsobjekte mit Mana/INT‑Bonussen und Minimalstufe (Daten aus [[11]]).
- Einheitliches Spell‑Schema (maschinenlesbar).
- Casting‑Workflow (Prüfungen, Mana‑Kosten, Saves, kritische Regeln).
- Default Lernregeln / Start‑Zauber für Magier.
- Beispiel‑Zauber (Grad 1..3) übernommen und als JSON‑Beispiele eingefügt.

====================================
2. Top‑Level‑Änderungen (Schema Ergänzungen)
====================================
Ergänze in Top‑Level JSON (siehe v0.9):
- In "abgeleitete_werte" ergänzen:
  "max_mana": Integer,
  "mana_aktuell": Integer

- Neues Top‑Level Feld:
  "zauber": {
    "cantrips": [ { spell_object } ],
    "known": [ { spell_object } ],
    "prepared": [ { spell_object } ]   // falls System Prepared Spells verwendet
  }

Aktualisiertes Minimal‑Template (Auszug):
  "abgeleitete_werte": { "lp_max":0,"lp_aktuell":0,"ini_bonus":0,"bew":0,"max_mana":0,"mana_aktuell":0 },
  "zauber": { "cantrips": [], "known": [], "prepared": [] }

====================================
3. Mana‑System (Regeln)
====================================
- max_mana Berechnung (bindend für Magier):
  max_mana = 10 + attribute.int + sum( ausruestung.boni where typ == "MANA" )
  (Stab‑Mana‑Bonusse werden als boni.typ = "MANA" geführt; siehe Stab‑Darstellung weiter unten.)
  (Referenz: Stäbe in Ausrüstungstabelle: z. B. "Stab der Quelle" +10 Mana [[11]].)
- mana_aktuell beim Erstellen:
  - Setze mana_aktuell := max_mana beim Erstellen (wenn Klasse == "Magier").
- Regeneration:
  - Volle Regeneration von mana_aktuell (→ max_mana) nach einer langen Rast (8 Stunden).
- Level‑Up:
  - Bei Attributsänderung oder Ausrüstungsänderung wird max_mana neu berechnet; Generator aktualisiert max_mana; mana_aktuell bleibt unverändert (wie bei LP).
- Mana‑Verfügbarkeit:
  - Ein Zauber kann nur gewirkt werden, wenn caster.mana_aktuell ≥ spell.mana_cost. Bei unzureichendem Mana ist Zauber nicht ausführbar.

(Citation: Stäbe & Mana-Boni siehe Item‑Liste Stäbe in deiner Datei [[11]].)

====================================
4. Stäbe / Arkane Foci (Darstellung & Regeln)
====================================
- Stäbe sind gewöhnliche Ausrüstungsobjekte (ausruestung[]), mit:
  - name, typ: "Stab" (oder "Anderes" mit tag), preis, gewicht, boni: [ ... ],
  - optional: "min_stufe": Integer (falls der Stab eine Mindeststufe verlangt)
- Bonitypen für Stäbe:
  - { "typ": "MANA", "wert": Integer, "quelle": "Stab XY" } — erhöht max_mana
  - { "typ": "INT", "wert": Integer, "quelle": "Stab XY" } — temporärer Attributsmodifier für Zauber‑Würfe (wir werten INT‑Bonusse in casting_roll ein)
- Regel: Ohne Stab erleidet der Magier −2 Malus auf alle Spellcasting‑Würfe (numerischer Malus).
- Regel: Stäbe mit min_stufe dürfen nur verwendet werden, wenn charakter.stufe ≥ min_stufe.
- Beispiel (aus [[11]]): "Stab der Quelle": boni: [ { typ: "MANA", wert: 10 } ], Preis 100 GM [[11]].

====================================
5. Spell‑Schema (JSON) — verbindlich
====================================
Jeder Zauber ist ein JSON‑Objekt mit mindestens diesen Feldern:
{
  "id": "String",            // unique identifier
  "name": "String",
  "grade": Integer,          // 1..n
  "zielwert_basis": Integer, // z. B. 8, 9, 10
  "mana_cost": Integer,
  "range": { "base_m": Number, "per_level_m": Number }, // Reichweite
  "duration": "instant" | "runden" | "minuten" | "stunden" | "permanent" | "custom",
  "duration_value": Number | null, // wenn duration != instant
  "action_type": "Freie Aktion" | "Aktion" | "Große Aktion" | "Reaktion",
  "target": "single" | "area" | "self" | "cone" | "line" | "touch",
  "area": { "shape":"cube"|"sphere"|"cone", "size_m": Number } | null, // für area spells
  "save": null | { "typ":"RZ"|"RR"|"RW", "on_success":"half"|"negate"|"other", "note":"String" },
  "flags": [ "ignores_armor","ignores_cover","auto_hit","projectiles_by_level", ... ], // optional
  "projectiles_by_level": { "1":1, "3":2, "6":3, "8":4 } // optional
  "description": "String"
}

Hinweis: spell.zielwert_total für Casting/Saves wird in Workflow bestimmt (siehe unten).

====================================
6. Casting‑Workflow (Engine‑Pseudocode)
====================================
Algorithmus (bindend / maschinenlesbar):

Function cast_spell(caster, spell, targets):
  // 0. Preconditions
  if caster.klasse != "Magier": reject unless spell allowed for class.
  if caster.mana_aktuell < spell.mana_cost: reject ("insufficient mana")

  if spell.min_stufe exists and caster.stufe < spell.min_stufe: reject ("too low level for item/spell")

  // 1. Spend Mana (immediately)
  caster.mana_aktuell -= spell.mana_cost
  Log(action="spend_mana",caster,spell,mana_before,mana_after)

  // 2. Compute effective casting stat
  effective_int = caster.attribute.int + sum( ausruestung.boni where typ == "INT" )
  if caster has no equipped Stab (ausruestung with typ "Stab" or boni.typ== "MANA" etc):
    effective_int -= 2   // staff penalty

  // 3. Compute casting roll target
  // spell_zielwert_total = spell.zielwert_basis + caster.stufe
  target_value_total = spell.zielwert_basis + caster.stufe

  // 4. Roll for casting
  d = roll_d20()
  casting_roll = d + effective_int
  Log(action="casting_roll", caster, d, effective_int, casting_roll, target_value_total)
  // Criticals
  if d == 20: success = true (automatic success)
  else if d == 1: success = false (automatic failure)
  else success = (casting_roll >= target_value_total)

  if not success:
    Log(action="spell_failed", caster, spell)
    return { success:false, reason:"casting_failed" } // mana already spent

  // 5. If success: apply spell effect per definition
  for each target in targets:
    if spell.save != null:
      // target rolls saving throw
      save_roll_d = roll_d20()
      save_bonus = target.get_save_bonus(spell.save.typ) // uses rz/rr/rw formulas + boni
      save_total = save_roll_d + save_bonus
      success_save = (save_total >= target_value_total)
      Log(action="save_roll", target, save_roll_d, save_bonus, save_total, target_value_total, success_save)
      // Apply effect based on save and spell.save.on_success (e.g. half damage)
    else:
      // apply spell effect directly (e.g. auto_hit projectiles)
  // 6. Log effect outcomes
  return { success:true, details: ... }

Notes:
- target_value_total uses caster.stufe scaling (consistent with earlier rule: "Stufe des wirkenden Magiers wird zum Rettungswurf-Zielwert addiert").
- Saves use defender W20 + appropriate save bonus (rz/rr/rw per Spec v0.9).
- Mana is consumed even if casting fails.
- Critical natural 20 → auto success; natural 1 → auto fail (mana still spent).

====================================
7. Kritische Erfolge / Patzer
====================================
- Natural 20 auf Casting d20: Automatical success (spell effect applies regardless of target_value_total).
- Natural 1 on casting d20: Automatic failure (spell has no effect). Mana still consumed.
- Implementationshinweis: Systems may add critical enhancement effects (e.g. doubled damage) — optional house rule, not default.

====================================
8. Spell‑Zielwert / Saves (Konsistenz)
====================================
- Casting target: spell_zielwert_total = spell.zielwert_basis + caster.stufe
- Defender Save: W20 + defender.save_bonus ≥ spell_zielwert_total to resist (consistent with previous "Verteidigung gegen magische Angriffe" Regeln).
- Save bonuses use the v0.9 formulas (floor(...)) for rz/rr/rw.

====================================
9. Zauberzugänglichkeit & Lernregeln (Defaults)
====================================
- Grade Unlocks:
  - Grade 1 available from Stufe 1
  - Grade 2 available from Stufe 3
  - Grade 3 available from Stufe 5
  (Matches your drafts.)
- Start‑Zauber (Creation rule):
  - Magier starten mit:
    - 2 Cantrips (grade 0) — "cantrips" list
    - 2 Grade‑1 Zauber (in "known" oder "prepared")
  - Generator: Wenn kein Spieler‑Auswahl, wähle typische defaults (Magisches Geschoss, Schild).
- Lernregel (Default):
  - Bei jedem Level‑Aufstieg erhält Magier +1 neues "known" Spell (beliebiger Grad ≤ erlaubtem Grad durch Stufe). Prepared‑Mechanik optional: Generator prepares subset per session if system uses prepared spells.
  - Cantrips: +1 Cantrip bei Stufen 3, 6, 9 (optional rule).
- Diese Regeln sind defaults und können später angepasst.

====================================
10. Staf/Item‑Repräsentation / Beispiele
====================================
- Stäbe in ausruestung[] sollten boni enthalten z. B.:
{
  "name":"Stab der Quelle",
  "typ":"Stab",
  "preis":100,
  "gewicht": 2,
  "boni":[ { "typ":"MANA", "wert":10, "quelle":"Stab der Quelle" } ],
  "min_stufe": 1,
  "beschreibung":"Vergrößert den Mana-Pool des Trägers um 10."
}
(Referenzdaten aus deiner Tabelle: "Stab der Quelle" +10 Mana, Preis 100 GM) [[11]].

- Stäbe, die INT‑Bonusse geben, verwenden boni { "typ":"INT", "wert": +N } oder attribute_modifiers (Generator implementiert INT‑boni beim Casting‑Roll) [[11]].

====================================
11. Spell‑Beispiele (JSON) — aus deinen Drafts
====================================
(Die folgenden Spell‑Objekte sind direkt aus deinen Drafts übertragen. Felder wie range/duration wurden interpretiert.)  
Hinweis: Texte gekürzt/normalisiert für maschinenlesbare Felder.

1) MAGISCHES GESCHOSS (Grad 1)
{
  "id":"MAG_GESCHOSS",
  "name":"Magisches Geschoss",
  "grade":1,
  "zielwert_basis":8,
  "mana_cost":3,
  "range": { "base_m": 55, "per_level_m": 9 },
  "duration":"instant",
  "action_type":"Aktion",
  "target":"single",
  "projectiles_by_level": { "1":1, "3":2, "6":3, "8":4 },
  "flags":[ "auto_hit", "ignores_armor","ignores_cover" ],
  "description":"Erzeugt 1 projectile (mehr auf höheren Stufen). Jedes projectile verursacht 1W4 Schaden und trifft automatisch, ignoriert Rüstung/Deckung."
}

2) SCHILD (Grad 1)
{
  "id":"SCHILD",
  "name":"Schild",
  "grade":1,
  "zielwert_basis":8,
  "mana_cost":4,
  "range": { "base_m":0, "per_level_m":0 },
  "duration":"runden",
  "duration_value": 2, // pro Stufe; interpretierung note: engine: duration_value * caster.stufe
  "action_type":"Aktion",
  "target":"self",
  "save": null,
  "flags": [],
  "description": "Gewährt +3 ASW gegen Fernkampfangriffe und +1 PA gegen andere Angriffe. Dauer: 2 Runden pro Stufe."
}

3) LICHT (Grad 1)
{
  "id":"LICHT",
  "name":"Licht",
  "grade":1,
  "zielwert_basis":8,
  "mana_cost":3,
  "range": { "base_m":55, "per_level_m":0 },
  "duration":"minuten",
  "duration_value":10, // pro Stufe
  "action_type":"Aktion",
  "target":"area",
  "area":{ "shape":"sphere", "size_m":6 },
  "save": { "typ":"RW", "on_success":"negate", "note":"Wenn direkt auf Augen gewirkt: RW-Wurf sonst geblendet" },
  "flags": [],
  "description":"Erzeugt eine Lichtquelle Radius 6m; bei direkt gewirkt: RW halb/Blindheits-Effect."
}

4) SCHLAF (Grad 1)
{
  "id":"SCHLAF",
  "name":"Schlaf",
  "grade":1,
  "zielwert_basis":8,
  "mana_cost":5,
  "range": { "base_m":27, "per_level_m":0 },
  "duration":"special",
  "action_type":"Aktion",
  "target":"area",
  "area":{ "shape":"cube", "size_m":3 },
  "save": { "typ":"RW", "on_success":"negate", "note":"Betroffene müssen Willenswurf schaffen, Anzahl Betroffener = 1W6 + caster.attribute.int; Kreaturen mit höherer Stufe als caster immun" },
  "flags": [],
  "description":"Versetzt Kreaturen in 3x3m Gebiet in Schlaf. Betroffene: 1W6 + INT des Magiers; höhere Stufe = immun."
}

5) FEDERFALL (Grad 1)
{
  "id":"FEDERFALL",
  "name":"Federfall",
  "grade":1,
  "zielwert_basis":8,
  "mana_cost":3,
  "range": { "base_m": 9, "per_level_m": 9 }, // 9m/Stufe interpreted as per_level_flex. For engine: max_range = base_m * caster.stufe or similar
  "duration":"runden",
  "duration_value":1, // per stufe
  "action_type":"Reaktion",
  "target":"single",
  "save": null,
  "flags": [],
  "description":"Verlangsamt Fallgeschwindigkeit; verhindert Fallschaden; kann als Reaktion gewirkt werden."
}

6) NETZ (Grad 2)
{
  "id":"NETZ",
  "name":"Netz",
  "grade":2,
  "zielwert_basis":9,
  "mana_cost":6,
  "range": { "base_m":9, "per_level_m":0 },
  "duration":"minuten",
  "duration_value":20, // per stufe
  "action_type":"Aktion",
  "target":"area",
  "area": { "shape":"cube", "size_m":5 },
  "save": { "typ":"RZ", "on_success":"negate", "note":"Befreiung via Stärke-Wurf (Zielwert 10)" },
  "flags": [],
  "description":"Erschafft klebriges Netz 5x5m; betroffene bewegungsunfähig; Stärke-Wurf Zielwert 10 zum Befreien."
}

7) UNSICHTBARKEIT (Grad 2)
{
  "id":"UNSICHTBARKEIT",
  "name":"Unsichtbarkeit",
  "grade":2,
  "zielwert_basis":9,
  "mana_cost":7,
  "range": { "base_m":0, "per_level_m":0 },
  "duration":"permanent",
  "duration_value":null,
  "action_type":"Aktion",
  "target":"single",
  "save": null,
  "flags": [],
  "description":"Ziel wird unsichtbar; endet bei offensiver Aktion des Ziels."
}

8) SPIEGELBILD (Grad 2)
{
  "id":"SPIEGELBILD",
  "name":"Spiegelbild",
  "grade":2,
  "zielwert_basis":9,
  "mana_cost":7,
  "range": { "base_m":0, "per_level_m":0 },
  "duration":"runden",
  "duration_value":1, // per stufe
  "action_type":"Aktion",
  "target":"self",
  "save": null,
  "flags": [],
  "description":"Erzeugt 1W4 Doppelgänger + 1 pro 3 Stufen; Angriffe treffen ggf. Bilder zuerst."
}

9) FURCHT (Grad 2)
{
  "id":"FURCHT",
  "name":"Furcht",
  "grade":2,
  "zielwert_basis":9,
  "mana_cost":6,
  "range": { "base_m":27, "per_level_m":0 },
  "duration":"runden",
  "duration_value": { "min":1, "max_formula": "1W4" },
  "action_type":"Aktion",
  "target":"area",
  "area": { "shape":"sphere", "size_m":3 }, // interpret length per draft
  "save": { "typ":"RW", "on_success":"negate" },
  "flags": [],
  "description":"Erzeugt Furcht in Kreaturen mit weniger als 6 LP im Wirkungsbereich; RW Willenskraft um zu resistieren."
}

10) KLOPFEN (Grad 2)
{
  "id":"KLOPFEN",
  "name":"Klopfen",
  "grade":2,
  "zielwert_basis":9,
  "mana_cost":4,
  "range": { "base_m":55, "per_level_m":0 },
  "duration":"instant",
  "action_type":"Aktion",
  "target":"single",
  "save": null,
  "flags": [],
  "description":"Öffnet verschlossene Türen/Kisten; erzeugt lautes Klopfen (Wahrnehmungs-Risiko)."
}

11) FEUERBALL (Grad 3)
{
  "id":"FEUERBALL",
  "name":"Feuerball",
  "grade":3,
  "zielwert_basis":10,
  "mana_cost":9,
  "range": { "base_m":9, "per_level_m":1 },
  "duration":"instant",
  "action_type":"Aktion",
  "target":"area",
  "area": { "shape":"sphere", "size_m":6 },
  "save": { "typ":"RR", "on_success":"half" },
  "flags": [],
  "description":"6m Radius Explosion; 1W6 Feuerschaden pro Stufe des Magiers; erfolgreicher Reflex RW halbiert Schaden."
}

12) BLITZSCHLAG (Grad 3)
{
  "id":"BLITZSCHLAG",
  "name":"Blitzschlag",
  "grade":3,
  "zielwert_basis":10,
  "mana_cost":10,
  "range": { "base_m":18, "per_level_m":9 },
  "duration":"instant",
  "action_type":"Aktion",
  "target":"line",
  "area": { "shape":"line", "size_m":18 }, // length 18m by default
  "save": { "typ":"RR", "on_success":"half" },
  "flags": [],
  "description":"18m lange Linie, 1W6 Blitzschaden pro Stufe; Reflex RW halbiert."
}

13) HAST (Grad 3)
{
  "id":"HAST",
  "name":"Hast",
  "grade":3,
  "zielwert_basis":10,
  "mana_cost":8,
  "range": { "base_m":55, "per_level_m":0 },
  "duration":"runden",
  "duration_value":3,
  "action_type":"Große Aktion",
  "target":"area",
  "area": { "shape":"cube", "size_m":12 },
  "save": null,
  "flags": [],
  "description":"Betroffene (bis 1 pro Stufe) agieren mit doppelter Bewegungsrate und erhalten eine zusätzliche Angriffsaktion pro Runde; Dauer 3 Runden."
}

====================================
12. Sonstige Engine / Daten‑Regeln
====================================
- Spell IDs sollten eindeutig und versioniert werden.
- Logging: Jeder Cast mit pre/post mana, cast roll, d20, targets, saves protokollieren.
- Balancing: Mana‑Kosten sind so gesetzt wie in Drafts; Anpassungen über Time/Playtests empfohlen.

====================================
13. Validierung & Konsistenzchecks (Magie‑bezogen)
====================================
Generator/Engine prüft:
- Für magische Items (Stäbe): min_stufe ≤ char.stufe bevor equipping allowed.
- caster.mana_aktuell ≥ spell.mana_cost vor Cast.
- spell.grade ≤ caster.allowed_grade_by_level (z. B. grade2 only if stufe ≥ 3).
- casting_roll/Targets logged.

====================================
14. Fragen & offene Optionen (kurz)
====================================
Ich habe die Default‑Lernregel gesetzt: +1 known spell pro Level, Start: 2 Cantrips + 2 Grade‑1. Wenn du andere Learning‑Rules willst (z. B. Spell‑slots statt known/prepared), sage kurz Bescheid.

====================================
15. Quellenhinweise (nur wenn Itemdaten verwendet wurden)
====================================
- Stab-/Item‑Daten (Beispiele, Preise und Boni) wurden der Ausrüstungsdatei entnommen (Stab‑Liste, Rüstungs/Preis‑Tabellen) [[11]].

====================================
Ende Spec v0.10
====================================

