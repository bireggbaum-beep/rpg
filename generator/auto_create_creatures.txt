Statblock Spezifikation – Auto-Creatur v1.2.2
=============================================

Zweck
-------
Einheitliche Regeln, damit Menschen und AIs konsistent spielbare Gegner-Statblöcke erzeugen, die ohne Rückfragen am Spieltisch funktionieren und von der Web-Anwendung korrekt dargestellt werden.

Globale Erklärpflicht (explizit)
--------------------------------
Jede verkürzte/keywordartige Angabe in irgendeinem Feld MUSS unter `besonderheiten` in Klartext erläutert werden (Wirkung, Grenzen, Beispiele). Gilt für alle Felder.
Beispiele: immun, Immunität, Resistenz, Anfälligkeit, „0 vs …“, „halber/doppelter Schaden“, Vorteil/Nachteil, automatisch/Auto-Treffer, kritisch bei 19–20, Regeneration, körperlos/ätherisch, spaltet sich/absorbiert/reflektiert, versteinern, betäubt, festgesetzt, zu Boden.

Top-Level-Felder (Pflicht, falls nicht „optional“ markiert)
----------------------------------------------------------
- name: String
- typ: String (z.B. Humanoid, Untot, Tier, Monster, Riese, Elementar, Schleimwesen, Gestaltwandler)
- traits: ["BEISPIEL_TRAIT_1", "BEISPIEL_TRAIT_2"],
- hg: Integer (1,2,…) oder Bruch als String („1/8“, „1/4“, „1/2“)
- ep: Integer
- lp: Integer
- sr: Integer
- sr_bemerkung: Optionaler String oder Array von Strings (z.B. „Leder“, „0 vs Wuchtwaffen“)
- bew: String. Format:
  - Nur Boden: „4“
  - Mit weiteren Modi: „4 (Flug 7, Schwimmen 3)“
- pa: Integer (Parade)
- asw: Integer (Ausweichwert)
- ini: Integer (darf negativ sein)
- rz: Integer oder „immun“
- rr: Integer oder „immun“
- rw: Integer oder „immun“
- pa_bemerkung: Optionales Array. Kann eine Mischung aus Strings und einem speziellen Schild-Objekt enthalten.
  - Zweck: Dient dazu, situative Boni/Mali auf die Parade (PA) zu notieren.
  - Format:
    - Text-Notizen: Einfache Strings im Array (z.B. "11 vs Wuchtwaffen"). Werden als (Text) angezeigt.
    - Schild-Bonus: Ein einzelnes Objekt mit fester Struktur, um einen Schildbonus darzustellen.
      {
        "icon": "shield",
        "value": "+1",
        "description": "Schild zählt nur von vorn"
      }
      - icon: Muss "shield" sein.
      - value: Der Bonus als String (z.B. "+1", "+2").
      - description: Optionaler Text, der als Tooltip beim Hovern über das Icon angezeigt wird.
- asw_bemerkung: Optionaler String oder Array von Strings.
- angriffe: Array von Angriffsobjekten (siehe Sektion 4).
- besonderheiten: Array von Strings (freier Text; Erklärpflicht beachten).
- beute: Array von Beuteobjekten (siehe Sektion 6).
- beschreibung: String (Pflicht; siehe Sektion 10).

Angriffe (Objekte in „angriffe“)
--------------------------------
Pflichtfelder je Angriff:
- name: String
- to_hit: Integer (Angriffsbonus; Feldname ist to_hit, nicht „bonus“)
- schaden: String mit festem Wert und optionaler Würfelnotation in Klammern.
  - Nur fester Wert: z.B. „6“
  - Fest + Würfel: z.B. „8 (2W4+3)“
  - Der feste Wert ist maßgeblich. Die Klammer ist nur optional für Tische, die würfeln wollen.
  - Empfehlung zur Klammer: Erwartungswert XWY+Z → X·(Y+1)/2 + Z; .5 wird aufgerundet; ±1 Abweichung toleriert.
- rz, rr, rw: Rettungswürfe der Kreatur. dieser Wert muss mit W20 erreicht oder überwürfelt werden. Niedriger ist besser. Profil muss zur Kreatur passen.
- traits: klassifiziert die Kreatur noch eine Ebene weiter. Array von 1-2 traits; Beispiele: typ: untot, traits: skelett; typ: humanoid, traits: goblin; Kreatur: Beschwörer-Initiant; typ: humanoid; traits: mensch, magier. Konvention: Mensch, Ork, Goblin, Kobold, Ratte, Magier, Vampier. Keine -oid-Endungen ausser bei Humanoid (nur bei typ). Keine zu tiefe Untergliederung.


Optionale Felder:
- reichweite: String-Token, wenn nicht Nahkampf. Erlaubt: „angrenzend“, „1xKurz“, „2xLang“, „3xLang“, „Kegel N“, „Linie N“
- anzahl: Integer (Einsätze pro Begegnung, z.B. 1)
- zusatz: Kurztext (z.B. „zu Boden“, „festgesetzt“, „Gift“)
- rettungswurf: Objekt – Pflicht, wenn der Angriff einen Save/Zustand/Effekt auslöst.
  - art: „RZ“ | „RR“ | „RW“
  - zw: Integer (Zielwert)
  - bei_misserfolg: Kurztext mit Wirkung (z.B. „1 Runde betäubt“, „Gift: 1W4/Runde, max 3 Runden“)
  - bei_erfolg: Kurztext (z.B. „keine Wirkung“, „halber Schaden“)
  - dauer: String (z.B. „1 Runde“, „1W4 Runden“, „bis Ziel aufsteht“)
  - wiederholung: Optional (z.B. „Ende jeder eigenen Runde“)
- tags: Optionales Array kurzer Labels (z.B. [„gift“, „krankheit“, „flächenangriff“])

Pflichten/Hinweise:
- Jeder Fern- oder Flächenangriff braucht eine `reichweite`.
- Jeder Zustand/Effekt braucht ein `rettungswurf`-Objekt (Art, ZW, Erfolg/Misserfolg, Dauer).
- Bei limitierter Nutzung `anzahl` setzen.

Zauber (optional)
------------------
Struktur wie Angriffe. Zusätzlich erlaubt: `auto: true` (automatische Wirkung ohne `to_hit`).
Auch hier gilt: `reichweite` angeben, wenn nicht Nahbereich; `rettungswurf`, wenn Effekt/Save.

Beute (Array) – Erlaubte Formen (W6-Mapping)
---------------------------------------------
Jedes Beute-Item ist ein eigenständiges Objekt mit folgenden Feldern:

Pflichtfeld:
- typ: "Schatz" | "Ausrüstung" | "Zutaten"

Optionale Felder:
- beschreibung: String (z.B. "Goldmünzen", "Schwert", "Giftzahn")
- wurf: String (Würfelnotation oder W6-Mapping als reiner Text)
  - Beispiele: "2W6", "(W6|1-3)", "(W6|1-2 Drop, 3-6 nichts)"
- wert: Integer (Wert in Goldmünzen)
- anzahl: Integer (Stückzahl, wenn > 1)

Beispiele:
- Schatz:
  { "typ": "Schatz", "wurf": "2W6", "beschreibung": "Goldmünzen" }

- Ausrüstung (garantiert):
  { "typ": "Ausrüstung", "beschreibung": "Schwert", "wert": 15 }

- Ausrüstung (mit Chance):
  { "typ": "Ausrüstung", "beschreibung": "Streitaxt", "wurf": "(W6|1-2)", "wert": 10 }

- Zutaten (erntbar, mit Chance):
  { "typ": "Zutaten", "beschreibung": "Giftzahn", "wurf": "(W6|1-3)", "wert": 25 }

- Mit Anzahl:
  { "typ": "Ausrüstung", "beschreibung": "Pfeile", "anzahl": 20, "wert": 5 }

Regeln:
- KEINE "wahl" Arrays mehr verwenden
- Der "wurf" Text ist rein informativ (zeigt Wahrscheinlichkeiten)
- "Schatz" = Währung/Gold
- "Ausrüstung" = Gegenstände, Waffen, Rüstungen
- "Zutaten" = Erntbare Materialien von Kreaturen
- Ca. 70% aller Kreaturen haben erntbare Zutaten

Erntbar-Richtlinie (Kurz)
--------------------------
- Ca. 70% aller Kreaturen sind erntbar
- Wenn ja, 1–2 passende "Zutaten"-Zeilen hinzufügen
- Zivilisierte Humanoide i.d.R. nicht erntbar

Besonderheiten (Array)
----------------------
Freier Text, kurz und eindeutig. Globale Erklärpflicht beachten: Alle Keywords/Abkürzungen (z.B. „immun“, „körperlos“, „Regeneration“) müssen hier in Klartext erläutert sein.

Bewegung (bew)
---------------
Immer Bodenbewegung als String. Zusätzliche Bewegungsarten in Klammern: „X (Flug Y, Schwimmen Z)“.

Notation und Tokens
-------------------
- Würfelnotation: „XWY±Z“ (Großes W).
- Beute-Mapping: "(W6|…)"
- Reichweite-Tokens: „angrenzend“, „1xKurz“, „2xLang“, „3xLang“, „Kegel N“, „Linie N“.
- Zustände (systemneutral): betäubt, gelähmt, festgesetzt, zu Boden, verlangsamt, in Flammen, furchtsam.

Beschreibung – Anforderungen (Pflicht)
--------------------------------------
- Umfang: 1–3 Sätze, ca. 30–70 Wörter.
- Inhalt: Mind. 2 der 3 Aspekte (Erscheinung/Atmosphäre, Verhalten/Taktik, Umfeld/Hook).
- Stil: Regelfrei, keine Zahlen/Würfel/Zustandsbegriffe.
- Bei Konversion aus anderen Systemen möglichst nah am Ursprungstext. Besonderheiten, die nur im Beschreibugstext erschienen, sind unter Besonderheiten zu erfassen.

Designziele nach HG (Richtwerte für Generierung/Validierung)
-----------------------------------------------------------
Hinweise:
- Die Werte in der Tabelle sind Leitplanken, um konsistente und konzepttreue Kreaturen zu gewährleisten. Die Freiheit für Spielbarkeit und Kreaturenindividualität ist aber weiterhin erwünscht.
- Die Spalte "Primär-Attribut (Bonus)" ist die wichtigste Leitplanke. Sie begrenzt die Boni, die eine Kreatur durch ihre Attribute (z.B. Stärke, Geschick) erhalten kann.
- Der `to_hit`-Wert eines Angriffs sollte nahe am "Angriffsbonus" des HG liegen (±1 ist akzeptabel).
- Die Werte für Lebenspunkte (LP) und Schadensreduktion (SR) sollten innerhalb ihres Korridors ausbalanciert werden (z.B. hohe SR → eher niedrigere LP und umgekehrt).
- Alle Kreaturen sind ausnahmslos in einen HG zwischen HG 1/8 (schwächste) und HG 12 (stärkste) einzuordnen.
- Bei Konversionen aus anderen Systemen sind extreme Werte (z.B. PA/ASW über 25) zu vermeiden und an die hier definierten Rahmenbedingungen anzupassen.

Richtwerte je HG:
| HG      | EP      | LP          | SR     | Primär-Attribut (Bonus) | Angriffsbonus | PA / ASW (Basis) |
|:--------|:--------|:------------|:-------|:------------------------|:--------------|:-----------------|
| 1/8     | 25      | 1–5         | 0–1    | +0 bis +1               | +0 bis +2     | 9–11             |
| 1/4     | 50      | 4–10        | 1–2    | +1 bis +2               | +1 bis +3     | 10–12            |
| 1/2     | 100     | 10–18       | 1–3    | +1 bis +2               | +2 bis +4     | 10–12            |
| 1       | 150     | 15–25       | 2–4    | +2 bis +3               | +2 bis +4     | 11–12            |
| 2       | 200     | 20–35       | 2–4    | +2 bis +4               | +3 bis +5     | 12–13            |
| 3       | 350     | 30–50       | 3–5    | +3 bis +4               | +4 bis +6     | 12–13            |
| 4       | 550     | 40–65       | 3–5    | +3 bis +5               | +5 bis +7     | 13–14            |
| 5       | 900     | 50–80       | 4–6    | +4 bis +5               | +6 bis +8     | 13–14            |
| 6       | 1.400   | 65–100      | 4–7    | +4 bis +6               | +6 bis +8     | 14–15            |
| 7       | 2.250   | 80–125      | 5–7    | +5 bis +6               | +7 bis +9     | 14–15            |
| 8       | 3.250   | 100–150     | 5–8    | +5 bis +7               | +7 bis +10    | 15–16            |
| 9       | 4.750   | 120–180     | 6–8    | +6 bis +7               | +8 bis +11    | 15–16            |
| 10      | 6.250   | 140–220     | 7–9    | +6 bis +8               | +9 bis +12    | 16–17            |
| 11      | 10.000  | 170–270     | 7–10   | +7 bis +9               | +10 bis +14   | 16–18            |
| 12      | 17.000  | 200–330     | 8–11   | +8 bis +9               | +11 bis +15   | 17–19            |

Validierungs-Checkliste (kurz)
------------------------------
- Pflichtfelder vorhanden: name, typ, hg, ep, lp, sr, bew, pa, asw, ini, rz, rr, rw, angriffe[], besonderheiten[], beute[], beschreibung.
- `bew`-Format korrekt („X“ oder „X (Flug Y, …)“).
- `pa_bemerkung` Format korrekt: Ist ein Array. Enthält nur Strings und/oder maximal ein Schild-Objekt (`{ "icon": "shield", ... }`).
- Angriffe: `schaden` als String („Z“ oder „Z (XWY±Z)“), `to_hit` Integer.
- Effekt/Save vorhanden? Dann `rettungswurf` vollständig (art, zw, Erfolg/Misserfolg, Dauer).
- Fern-/Flächenangriffe haben `reichweite`.
- `anzahl` gesetzt bei limitierten Aktionen.
- Beute-Chancen gem. Erklärung in Beute (Array); `wahl` korrekt verwendet.
- Globale Erklärpflicht erfüllt (Keywords erklärt).
- Werte grob im HG-Korridor (to_hit, LP, SR, PA/ASW).

Datenstruktur
-------------
Die finale Ausgabe ist ein JSON-Array der alle generierten Gegner enthält:
Beispiel einer validen Datei:
[
  {
    "name": "Gegner 1",
    "typ": "Humanoid",
    ...
  },
  {
    "name": "Gegner 2",
    "typ": "Tier",
    ...
  }
]



Minimal-Template (zum Ausfüllen) - AKTUALISIERT
------------------------------------------------
{
  "name": "NAME",
  "typ": "TYP",
  "traits": ["BEISPIEL_TRAIT_1", "BEISPIEL_TRAIT_2"],
  "hg": "1/2",
  "ep": 100,
  "lp": 14,
  "sr": 2,
  "sr_bemerkung": "",
  "bew": "4",
  "pa": 12,
  "asw": 12,
  "ini": 1,
  "rz": 10,
  "rr": 10,
  "rw": 11,
  "pa_bemerkung": [
    "11 vs Wuchtwaffen",
    {
      "icon": "shield",
      "value": "+1",
      "description": "Schild zählt nur von vorn"
    }
  ],
  "asw_bemerkung": "",
  "angriffe": [
    { "name": "Nahkampf", "to_hit": 3, "schaden": "5 (1W8)" },
    { "name": "Fernkampf", "to_hit": 2, "schaden": "3 (1W6)", "reichweite": "2xLang" }
  ],
  "besonderheiten": [
    "Beispiel: Resistenz: Stichwaffen (halber Schaden)"
  ],
  "beute": [
    { "typ": "Schatz", "wurf": "2W6", "beschreibung": "Goldmünzen" },
    { "typ": "Ausrüstung", "beschreibung": "Kurzschwert", "wurf": "(W6|1-3)", "wert": 10 },
    { "typ": "Ausrüstung", "beschreibung": "Pfeile", "wurf": "(W6|4-5)", "anzahl": 10 },
    { "typ": "Zutaten", "beschreibung": "Kreaturen-Auge", "wurf": "(W6|1-2)", "wert": 5 }
  ],
  "beschreibung": "1–3 Sätze, 30–70 Wörter..."
}

Kompakter Prompt-Hinweis (für Generatoren/AI)
=============================================
Erzeuge Statblöcke strikt nach v1.1.5.
Rolle wählen (siehe Addendum v1.1a). Wenn keine Controller/Unterstützer: keine Effekte; selten 1 kleiner Effekt (anzahl 1).
`schaden` als String: fester Wert, optional Würfel in Klammern.
Jeder Effekt mit vollständigem `rettungswurf`; jede Fern-/Flächenwirkung mit `reichweite`.
`bew` im Format „X“ bzw. „X (Flug Y, …)“.
- Beute: Verwende (W6|…)-Mapping im Feld "wurf" für Drops/Alternativen; "wahl" enthält Mengen/Werte.
- GM (Gold) bleibt in klassischer Würfelnotation (z.B. "1W6"), ohne Mapping.
- "nichts" nur im Mapping-Text (nicht in "wahl"); Namen in Mapping und "wahl" müssen exakt übereinstimmen.
Globale Erklärpflicht beachten (Keywords in Besonderheiten erläutern).
`beschreibung`: 1–3 Sätze, 30–70 Wörter, mind. zwei Inhalte (Erscheinung, Verhalten, Umfeld), keine Crunch-Begriffe.
Beute: KEINE "wahl" Arrays verwenden! Jedes Beute-Item ist ein eigenständiges Objekt.
- Typ: "Schatz" (Gold), "Ausrüstung" (Items), "Zutaten" (erntbar)
- Würfelwurf im "wurf" Feld ist nur informativer Text
- Mehrere Items = mehrere separate Objekte im beute Array

Addendum v1.1a: Vielfalt- und Einfachheitsregeln
================================================
Rollenverteilung pro HG (Richtwerte; genau eine Rolle pro Gegner wählen)
HG 1/8–1: Bruiser 45%, Skirmisher 25%, Schütze 15%, Controller 10%, Unterstützer 5%
HG 2–3: Bruiser 35%, Skirmisher 20%, Schütze 15%, Controller 20%, Unterstützer 10%
HG 4+: Bruiser 30%, Skirmisher 20%, Schütze 15%, Controller 25%, Unterstützer 10%

Rollendefinitionen (kurz)
Bruiser: 1–2 Nahkampfangriffe, keine Save-/Zustandseffekte.
Skirmisher: 1 Nahkampf + 1 Fern oder Mobilitäts-Trick; höchstens 1 limitierte Utility (ohne Save).
Schütze: Fokus Fernkampf; optional 1 Spezialschuss, aber ohne Zustandseffekt oder max. 1 Save-Effekt (anzahl 1).
Controller: 1 Save-basierter CC/Flächenangriff (anzahl 1–2), restliche Angriffe simpel.
Unterstützer: Buff/Debuff/Heilung (anzahl), kein zusätzlicher CC-Spam.

Effekt-Budget pro Gegner
- Nicht-Controller/Unterstützer: 0 Save-/Zustands-Effekte (Standard). In höchstens 30% dieser Fälle ist 1 kleiner Effekt erlaubt (z.B. „zu Boden“, anzahl 1).
- Controller/Unterstützer: max. 1 Save-basierter Effekt (selten 2, wenn beide anzahl-begrenzt).

Begegnungsweite Begrenzung
- In einer Begegnung sollen höchstens 1/3 der Gegner Save-/CC-Effekte haben.
- Max. 1 AoE-CC pro Begegnung als Standard (Bosskämpfe ausgenommen).

Angriffszahl und Limitierungen
- 1–2 Angriffe total sind Standard. 3 nur bei Elite/Boss.
- Jeder Effektangriff hat `anzahl` (z.B. 1 oder 2). Dauer/ZW klar angeben (Spec v1.1.5).

Kompakter Prompt-Zusatz für deine Generatoren
---------------------------------------------
Füge das deiner Promptvorlage an, damit „keine Effekte“ endlich der Normalfall wird:
Nutze die Rollenverteilung aus Addendum v1.1a. Wähle genau eine Rolle je Gegner.
- Wenn Rolle ≠ Controller/Unterstützer: Erzeuge KEINE Save-/Zustands-Effekte. Erlaube in höchstens 30% der Fälle EINEN kleinen Effekt (z.B. „zu Boden“), dann mit anzahl=1 und vollständigem rettungswurf.
- Wenn Rolle = Controller/Unterstützer: Erzeuge GENAU EINEN Save-/Zustands- oder AoE-Effekt (anzahl 1–2). Alle übrigen Angriffe sind simpel.
- In Summe: Max. 1/3 der Gegner mit Effekten; höchstens ein AoE-CC pro Begegnung.

Addendum v1.2.2a: Design-Philosophie für Verteidigungswerte
--------------------------------------------------------------------------
Zweck: Dieses Addendum präzisiert die konzeptionelle Absicht hinter den Verteidigungswerten (PA, ASW, SR) und den HG-Richtwerten, um eine konsistente und taktisch interessante Kreaturengestaltung zu gewährleisten.

1. Interpretation der HG-Richtwerte
Die in der Spezifikation genannten Tabellenwerte (z.B. für LP, SR, Angriffsbonus) sind als Leitplanken und Orientierungshilfen zu verstehen, nicht als starre Grenzen.
- Flexibilität ist erwünscht: Einzelne Werte einer Kreatur dürfen und sollen von den Richtwerten abweichen, wenn es dem Konzept der Kreatur dient.
- Gesamtbild zählt: Die Stärke einer Kreatur ergibt sich aus dem Zusammenspiel all ihrer Werte. Eine Abweichung nach unten bei einem Wert (z.B. niedriger ASW) kann durch eine Abweichung nach oben bei einem anderen (z.B. hohe LP oder SR) ausgeglichen werden.
- Ausnahme: Die Felder hg (Herausforderungsgrad) und ep (Erfahrungspunkte) müssen immer exakt zueinander passen, da sie die finale Einstufung der Kreatur darstellen.

2. Die drei Ebenen der Verteidigung: PA, ASW und SR
Diese drei Werte repräsentieren unterschiedliche Verteidigungsebenen. Ihre korrekte Trennung ist entscheidend für die taktische Tiefe des Systems.
- PA (Parade) & ASW (Ausweichwert) – Die Treffervermeidung:
  Diese Werte repräsentieren das aktive Geschick einer Kreatur, einem Angriff zu entgehen. PA basiert auf Stärke (Blocken, Parieren), ASW auf Geschick (Ausweichen). Sie bestimmen, ob ein Angriff trifft.
- SR (Schadensreduktion) – Die Schadensabsorption:
  Dieser Wert repräsentiert die Fähigkeit, den Schaden eines erfolgreichen Treffers zu reduzieren. Er leitet sich direkt von der getragenen oder natürlichen Rüstung ab. Eine Kreatur ohne Rüstung hat in der Regel SR 0.
- Sonderfall Schild:
  Ein Schild ist die einzige Ausrüstung, die die PA direkt erhöht. Dieser Bonus wird über das Schild-Objekt in `pa_bemerkung` vermerkt. Ein Schild gewährt keine SR.

3. Gestaltung von PA und ASW zur Charakterisierung
Die Beziehung zwischen Parade (PA) und Ausweichwert (ASW) ist ein wichtiges Werkzeug, um das Konzept einer Kreatur zu schärfen.
- Asymmetrische Werte (PA ≠ ASW): Ideal für Spezialisten. Ein schwerfälliger Tank sollte eine hohe PA, aber einen niedrigen ASW haben. Ein flinker Schurke sollte einen hohen ASW, aber eine niedrige PA haben.
- Symmetrische Werte (PA = ASW): Ideal für Allrounder oder Kreaturen mit ausgewogener Stärke und Geschicklichkeit (z.B. ein ausgebildeter Soldat, ein Wolf).

Anweisung: Wähle das Verhältnis von PA und ASW so, dass es das Wesen der Kreatur am besten widerspiegelt. Eine Asymmetrie ist eine Option, keine Pflicht. Ein Unterschied zwischen PA und ASW bringt taktisch interessante Optionen, ist aber nicht für alle Kreaturen passend oder zwingend.  



