Statblock Spezifikation – Auto-Creatur v1.2.1
=============================================

Zweck
-------
Einheitliche Regeln, damit Menschen und AIs konsistent spielbare Gegner-Statblöcke erzeugen, die ohne Rückfragen am Spieltisch funktionieren und von der Web-Anwendung korrekt dargestellt werden.

Globale Erklärpflicht (explizit)
--------------------------------
Jede verkürzte/keywordartige Angabe in irgendeinem Feld MUSS unter `besonderheiten` in Klartext erläutert werden (Wirkung, Grenzen, Beispiele). Gilt für alle Felder.
Beispiele: immun, Immunität, Resistenz, Anfälligkeit, „0 vs …“, „halber/doppelter Schaden“, Vorteil/Nachteil, automatisch/Auto-Treffer, kritisch bei 19–20, Regeneration, körperlos/ätherisch, spaltet sich/absorbiert/reflektiert, versteinern, betäubt, festgesetzt, zu Boden.

Top-Level-Felder (Pflicht, falls nicht „optional“ markiert)
----------------------------------------------------------
- name: String
- typ: String (z.B. Humanoid, Untot, Tier, Monster, Riese, Elementar, Schleimwesen, Gestaltwandler)
- traits: ["BEISPIEL_TRAIT_1", "BEISPIEL_TRAIT_2"],
- hg: Integer (1,2,…) oder Bruch als String („1/8“, „1/4“, „1/2“)
- ep: Integer
- lp: Integer
- sr: Integer
- sr_bemerkung: Optionaler String oder Array von Strings (z.B. „Leder“, „0 vs Wuchtwaffen“)
- bew: String. Format:
  - Nur Boden: „4“
  - Mit weiteren Modi: „4 (Flug 7, Schwimmen 3)“
- pa: Integer (Parade)
- asw: Integer (Ausweichwert)
- ini: Integer (darf negativ sein)
- rz: Integer oder „immun“
- rr: Integer oder „immun“
- rw: Integer oder „immun“
- pa_bemerkung: Optionales Array. Kann eine Mischung aus Strings und einem speziellen Schild-Objekt enthalten.
  - Zweck: Dient dazu, situative Boni/Mali auf die Parade (PA) zu notieren.
  - Format:
    - Text-Notizen: Einfache Strings im Array (z.B. "11 vs Wuchtwaffen"). Werden als (Text) angezeigt.
    - Schild-Bonus: Ein einzelnes Objekt mit fester Struktur, um einen Schildbonus darzustellen.
      {
        "icon": "shield",
        "value": "+1",
        "description": "Schild zählt nur von vorn"
      }
      - icon: Muss "shield" sein.
      - value: Der Bonus als String (z.B. "+1", "+2").
      - description: Optionaler Text, der als Tooltip beim Hovern über das Icon angezeigt wird.
- asw_bemerkung: Optionaler String oder Array von Strings.
- angriffe: Array von Angriffsobjekten (siehe Sektion 4).
- besonderheiten: Array von Strings (freier Text; Erklärpflicht beachten).
- beute: Array von Beuteobjekten (siehe Sektion 6).
- beschreibung: String (Pflicht; siehe Sektion 10).

Angriffe (Objekte in „angriffe“)
--------------------------------
Pflichtfelder je Angriff:
- name: String
- to_hit: Integer (Angriffsbonus; Feldname ist to_hit, nicht „bonus“)
- schaden: String mit festem Wert und optionaler Würfelnotation in Klammern.
  - Nur fester Wert: z.B. „6“
  - Fest + Würfel: z.B. „8 (2W4+3)“
  - Der feste Wert ist maßgeblich. Die Klammer ist nur optional für Tische, die würfeln wollen.
  - Empfehlung zur Klammer: Erwartungswert XWY+Z → X·(Y+1)/2 + Z; .5 wird aufgerundet; ±1 Abweichung toleriert.
- rz, rr, rw: Rettungswürfe der Kreatur. dieser Wert muss mit W20 erreicht oder überwürfelt werden. Niedriger ist besser. Profil muss zur Kreatur passen.
- traits: klassifiziert die Kreatur noch eine Ebene weiter. Array von 1-2 traits; Beispiele: typ: untot, traits: skelett; typ: humanoid, traits: goblin; Kreatur: Beschwörer-Initiant; typ: humanoid; traits: mensch, magier. Konvention: Mensch, Ork, Goblin, Kobold, Ratte, Magier, Vampier. Keine -oid-Endungen ausser bei Humanoid (nur bei typ). Keine zu tiefe Untergliederung.


Optionale Felder:
- reichweite: String-Token, wenn nicht Nahkampf. Erlaubt: „angrenzend“, „1xKurz“, „2xLang“, „3xLang“, „Kegel N“, „Linie N“
- anzahl: Integer (Einsätze pro Begegnung, z.B. 1)
- zusatz: Kurztext (z.B. „zu Boden“, „festgesetzt“, „Gift“)
- rettungswurf: Objekt – Pflicht, wenn der Angriff einen Save/Zustand/Effekt auslöst.
  - art: „RZ“ | „RR“ | „RW“
  - zw: Integer (Zielwert)
  - bei_misserfolg: Kurztext mit Wirkung (z.B. „1 Runde betäubt“, „Gift: 1W4/Runde, max 3 Runden“)
  - bei_erfolg: Kurztext (z.B. „keine Wirkung“, „halber Schaden“)
  - dauer: String (z.B. „1 Runde“, „1W4 Runden“, „bis Ziel aufsteht“)
  - wiederholung: Optional (z.B. „Ende jeder eigenen Runde“)
- tags: Optionales Array kurzer Labels (z.B. [„gift“, „krankheit“, „flächenangriff“])

Pflichten/Hinweise:
- Jeder Fern- oder Flächenangriff braucht eine `reichweite`.
- Jeder Zustand/Effekt braucht ein `rettungswurf`-Objekt (Art, ZW, Erfolg/Misserfolg, Dauer).
- Bei limitierter Nutzung `anzahl` setzen.

Zauber (optional)
------------------
Struktur wie Angriffe. Zusätzlich erlaubt: `auto: true` (automatische Wirkung ohne `to_hit`).
Auch hier gilt: `reichweite` angeben, wenn nicht Nahbereich; `rettungswurf`, wenn Effekt/Save.

Beute (Array) – Erlaubte Formen (W6-Mapping)
---------------------------------------------
Jedes Beute-Item ist ein eigenständiges Objekt mit folgenden Feldern:

Pflichtfeld:
- typ: "Schatz" | "Ausrüstung" | "Zutaten"

Optionale Felder:
- beschreibung: String (z.B. "Goldmünzen", "Schwert", "Giftzahn")
- wurf: String (Würfelnotation oder W6-Mapping als reiner Text)
  - Beispiele: "2W6", "(W6|1-3)", "(W6|1-2 Drop, 3-6 nichts)"
- wert: Integer (Wert in Goldmünzen)
- anzahl: Integer (Stückzahl, wenn > 1)

Beispiele:
- Schatz:
  { "typ": "Schatz", "wurf": "2W6", "beschreibung": "Goldmünzen" }

- Ausrüstung (garantiert):
  { "typ": "Ausrüstung", "beschreibung": "Schwert", "wert": 15 }

- Ausrüstung (mit Chance):
  { "typ": "Ausrüstung", "beschreibung": "Streitaxt", "wurf": "(W6|1-2)", "wert": 10 }

- Zutaten (erntbar, mit Chance):
  { "typ": "Zutaten", "beschreibung": "Giftzahn", "wurf": "(W6|1-3)", "wert": 25 }

- Mit Anzahl:
  { "typ": "Ausrüstung", "beschreibung": "Pfeile", "anzahl": 20, "wert": 5 }

Regeln:
- KEINE "wahl" Arrays mehr verwenden
- Der "wurf" Text ist rein informativ (zeigt Wahrscheinlichkeiten)
- "Schatz" = Währung/Gold
- "Ausrüstung" = Gegenstände, Waffen, Rüstungen
- "Zutaten" = Erntbare Materialien von Kreaturen
- Ca. 70% aller Kreaturen haben erntbare Zutaten

Erntbar-Richtlinie (Kurz)
--------------------------
- Ca. 70% aller Kreaturen sind erntbar
- Wenn ja, 1–2 passende "Zutaten"-Zeilen hinzufügen
- Zivilisierte Humanoide i.d.R. nicht erntbar

Besonderheiten (Array)
----------------------
Freier Text, kurz und eindeutig. Globale Erklärpflicht beachten: Alle Keywords/Abkürzungen (z.B. „immun“, „körperlos“, „Regeneration“) müssen hier in Klartext erläutert sein.

Bewegung (bew)
---------------
Immer Bodenbewegung als String. Zusätzliche Bewegungsarten in Klammern: „X (Flug Y, Schwimmen Z)“.

Notation und Tokens
-------------------
- Würfelnotation: „XWY±Z“ (Großes W).
- Beute-Mapping: "(W6|…)"
- Reichweite-Tokens: „angrenzend“, „1xKurz“, „2xLang“, „3xLang“, „Kegel N“, „Linie N“.
- Zustände (systemneutral): betäubt, gelähmt, festgesetzt, zu Boden, verlangsamt, in Flammen, furchtsam.

Beschreibung – Anforderungen (Pflicht)
--------------------------------------
- Umfang: 1–3 Sätze, ca. 30–70 Wörter.
- Inhalt: Mind. 2 der 3 Aspekte (Erscheinung/Atmosphäre, Verhalten/Taktik, Umfeld/Hook).
- Stil: Regelfrei, keine Zahlen/Würfel/Zustandsbegriffe.
- Bei Konversion aus anderen Systemen möglichst nah am Ursprungstext. Besonderheiten, die nur im Beschreibugstext erschienen, sind unter Besonderheiten zu erfassen.

Designziele nach HG (Richtwerte für Generierung/Validierung)
-----------------------------------------------------------
Hinweise:
- to_hit je Angriff nahe „Angriffsbonus“ des HG (±1 ok).
- PA/ASW an „Verteidigung (ca.)“ ausrichten.
- LP/SR ins Korridor bringen (hohe SR → eher niedrigere LP und umgekehrt).
- „Schaden/Runde“ nur intern für Balancing; ohne SC-Referenz optional.
- Alle Kreaturen sind ausnahmslos in einen HG zwischen HG1/8 bis HG12 einzuordnen.
- HG1/8 sind die schwächsten Kreaturen. HG12 die stärksten.
- EP und Verteidigung sind sehr starke Boundaries und sind wenn immer möglich anzustreben. Ausser eine spezielle Eigenschaft/Fähigkeit/Besonderheit einer Kreatur rechtfertigt eine grössere Abweichung.
- Nur für Konversionen aus anderen Bestiarien: die Kreaturen sind auf den Herausforderungsgrad HG1/8 bis HG12 zu mappen und die oben genannten Richtlinien anzuwenden. Boundaries sind einzuhalten, wenn nicht durch besondere Eigenheiten/Attacken/Besonderheiten usw. gerechtfertigt. 

Richtwerte je HG:
HG 1/8: EP 25; LP 1–5; SR 0–1; Angriffsbonus +0 bis +2; Schaden/Runde 1; Verteidigung 10–12
HG 1/4: EP 50; LP 4–10; SR 1–2; Angriffsbonus +1 bis +3; Schaden/Runde 1–2; Verteidigung 11–13
HG 1/2: EP 100; LP 10–18; SR 1–3; Angriffsbonus +2 bis +4; Schaden/Runde 2–3; Verteidigung 12–14
HG 1: EP 150; LP 15–25; SR 2–4; Angriffsbonus +2 bis +4; Schaden/Runde 3–4; Verteidigung 13–14
HG 2: EP 200; LP 20–35; SR 2–4; Angriffsbonus +3 bis +5; Schaden/Runde 4–5; Verteidigung 14
HG 3: EP 350; LP 30–50; SR 3–5; Angriffsbonus +4 bis +6; Schaden/Runde 5–7; Verteidigung 14–15
HG 4: EP 550; LP 40–65; SR 3–5; Angriffsbonus +5 bis +7; Schaden/Runde 7–9; Verteidigung 15
HG 5: EP 900; LP 50–80; SR 4–6; Angriffsbonus +6 bis +8; Schaden/Runde 9–12; Verteidigung 16
HG 6: EP 1.400; LP 65–100; SR 4–7; Angriffsbonus +6 bis +8; Schaden/Runde 12–15; Verteidigung 16–17
HG 7: EP 2.250; LP 80–125; SR 5–7; Angriffsbonus +7 bis +9; Schaden/Runde 16–20; Verteidigung 17
HG 8: EP 3.250; LP 100–150; SR 5–8; Angriffsbonus +7 bis +10; Schaden/Runde 20–25; Verteidigung 18
HG 9: EP 4.750; LP 120–180; SR 6–8; Angriffsbonus +8 bis +11; Schaden/Runde 25–32; Verteidigung 18–19
HG 10: EP 6.250; LP 140–220; SR 7–9; Angriffsbonus +9 bis +12; Schaden/Runde 32–40; Verteidigung 19–20
HG 11: EP 10.000; LP 170–270; SR 7–10; Angriffsbonus +10 bis +14; Schaden/Runde 40–50; Verteidigung 20–22
HG 12: EP 17.000; LP 200–330; SR 8–11; Angriffsbonus +11 bis +15; Schaden/Runde 50–65; Verteidigung 21–23

Validierungs-Checkliste (kurz)
------------------------------
- Pflichtfelder vorhanden: name, typ, hg, ep, lp, sr, bew, pa, asw, ini, rz, rr, rw, angriffe[], besonderheiten[], beute[], beschreibung.
- `bew`-Format korrekt („X“ oder „X (Flug Y, …)“).
- `pa_bemerkung` Format korrekt: Ist ein Array. Enthält nur Strings und/oder maximal ein Schild-Objekt (`{ "icon": "shield", ... }`).
- Angriffe: `schaden` als String („Z“ oder „Z (XWY±Z)“), `to_hit` Integer.
- Effekt/Save vorhanden? Dann `rettungswurf` vollständig (art, zw, Erfolg/Misserfolg, Dauer).
- Fern-/Flächenangriffe haben `reichweite`.
- `anzahl` gesetzt bei limitierten Aktionen.
- Beute-Chancen gem. Erklärung in Beute (Array); `wahl` korrekt verwendet.
- Globale Erklärpflicht erfüllt (Keywords erklärt).
- Werte grob im HG-Korridor (to_hit, LP, SR, PA/ASW).

Datenstruktur
-------------
Die finale Ausgabe ist ein JSON-Array der alle generierten Gegner enthält:
Beispiel einer validen Datei:
[
  {
    "name": "Gegner 1",
    "typ": "Humanoid",
    ...
  },
  {
    "name": "Gegner 2",
    "typ": "Tier",
    ...
  }
]



Minimal-Template (zum Ausfüllen) - AKTUALISIERT
------------------------------------------------
{
  "name": "NAME",
  "typ": "TYP",
  "traits": ["BEISPIEL_TRAIT_1", "BEISPIEL_TRAIT_2"],
  "hg": "1/2",
  "ep": 100,
  "lp": 14,
  "sr": 2,
  "sr_bemerkung": "",
  "bew": "4",
  "pa": 12,
  "asw": 12,
  "ini": 1,
  "rz": 10,
  "rr": 10,
  "rw": 11,
  "pa_bemerkung": [
    "11 vs Wuchtwaffen",
    {
      "icon": "shield",
      "value": "+1",
      "description": "Schild zählt nur von vorn"
    }
  ],
  "asw_bemerkung": "",
  "angriffe": [
    { "name": "Nahkampf", "to_hit": 3, "schaden": "5 (1W8)" },
    { "name": "Fernkampf", "to_hit": 2, "schaden": "3 (1W6)", "reichweite": "2xLang" }
  ],
  "besonderheiten": [
    "Beispiel: Resistenz: Stichwaffen (halber Schaden)"
  ],
  "beute": [
    { "typ": "Schatz", "wurf": "2W6", "beschreibung": "Goldmünzen" },
    { "typ": "Ausrüstung", "beschreibung": "Kurzschwert", "wurf": "(W6|1-3)", "wert": 10 },
    { "typ": "Ausrüstung", "beschreibung": "Pfeile", "wurf": "(W6|4-5)", "anzahl": 10 },
    { "typ": "Zutaten", "beschreibung": "Kreaturen-Auge", "wurf": "(W6|1-2)", "wert": 5 }
  ],
  "beschreibung": "1–3 Sätze, 30–70 Wörter..."
}

Kompakter Prompt-Hinweis (für Generatoren/AI)
=============================================
Erzeuge Statblöcke strikt nach v1.1.5.
Rolle wählen (siehe Addendum v1.1a). Wenn keine Controller/Unterstützer: keine Effekte; selten 1 kleiner Effekt (anzahl 1).
`schaden` als String: fester Wert, optional Würfel in Klammern.
Jeder Effekt mit vollständigem `rettungswurf`; jede Fern-/Flächenwirkung mit `reichweite`.
`bew` im Format „X“ bzw. „X (Flug Y, …)“.
- Beute: Verwende (W6|…)-Mapping im Feld "wurf" für Drops/Alternativen; "wahl" enthält Mengen/Werte.
- GM (Gold) bleibt in klassischer Würfelnotation (z.B. "1W6"), ohne Mapping.
- "nichts" nur im Mapping-Text (nicht in "wahl"); Namen in Mapping und "wahl" müssen exakt übereinstimmen.
Globale Erklärpflicht beachten (Keywords in Besonderheiten erläutern).
`beschreibung`: 1–3 Sätze, 30–70 Wörter, mind. zwei Inhalte (Erscheinung, Verhalten, Umfeld), keine Crunch-Begriffe.
Beute: KEINE "wahl" Arrays verwenden! Jedes Beute-Item ist ein eigenständiges Objekt.
- Typ: "Schatz" (Gold), "Ausrüstung" (Items), "Zutaten" (erntbar)
- Würfelwurf im "wurf" Feld ist nur informativer Text
- Mehrere Items = mehrere separate Objekte im beute Array

Addendum v1.1a: Vielfalt- und Einfachheitsregeln
================================================
Rollenverteilung pro HG (Richtwerte; genau eine Rolle pro Gegner wählen)
HG 1/8–1: Bruiser 45%, Skirmisher 25%, Schütze 15%, Controller 10%, Unterstützer 5%
HG 2–3: Bruiser 35%, Skirmisher 20%, Schütze 15%, Controller 20%, Unterstützer 10%
HG 4+: Bruiser 30%, Skirmisher 20%, Schütze 15%, Controller 25%, Unterstützer 10%

Rollendefinitionen (kurz)
Bruiser: 1–2 Nahkampfangriffe, keine Save-/Zustandseffekte.
Skirmisher: 1 Nahkampf + 1 Fern oder Mobilitäts-Trick; höchstens 1 limitierte Utility (ohne Save).
Schütze: Fokus Fernkampf; optional 1 Spezialschuss, aber ohne Zustandseffekt oder max. 1 Save-Effekt (anzahl 1).
Controller: 1 Save-basierter CC/Flächenangriff (anzahl 1–2), restliche Angriffe simpel.
Unterstützer: Buff/Debuff/Heilung (anzahl), kein zusätzlicher CC-Spam.

Effekt-Budget pro Gegner
- Nicht-Controller/Unterstützer: 0 Save-/Zustands-Effekte (Standard). In höchstens 30% dieser Fälle ist 1 kleiner Effekt erlaubt (z.B. „zu Boden“, anzahl 1).
- Controller/Unterstützer: max. 1 Save-basierter Effekt (selten 2, wenn beide anzahl-begrenzt).

Begegnungsweite Begrenzung
- In einer Begegnung sollen höchstens 1/3 der Gegner Save-/CC-Effekte haben.
- Max. 1 AoE-CC pro Begegnung als Standard (Bosskämpfe ausgenommen).

Angriffszahl und Limitierungen
- 1–2 Angriffe total sind Standard. 3 nur bei Elite/Boss.
- Jeder Effektangriff hat `anzahl` (z.B. 1 oder 2). Dauer/ZW klar angeben (Spec v1.1.5).

Kompakter Prompt-Zusatz für deine Generatoren
---------------------------------------------
Füge das deiner Promptvorlage an, damit „keine Effekte“ endlich der Normalfall wird:
Nutze die Rollenverteilung aus Addendum v1.1a. Wähle genau eine Rolle je Gegner.
- Wenn Rolle ≠ Controller/Unterstützer: Erzeuge KEINE Save-/Zustands-Effekte. Erlaube in höchstens 30% der Fälle EINEN kleinen Effekt (z.B. „zu Boden“), dann mit anzahl=1 und vollständigem rettungswurf.
- Wenn Rolle = Controller/Unterstützer: Erzeuge GENAU EINEN Save-/Zustands- oder AoE-Effekt (anzahl 1–2). Alle übrigen Angriffe sind simpel.
- In Summe: Max. 1/3 der Gegner mit Effekten; höchstens ein AoE-CC pro Begegnung.
